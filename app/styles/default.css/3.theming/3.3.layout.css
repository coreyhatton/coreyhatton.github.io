@layer theming.layout.header {
  /* Header, Main, Footer specifics */

  /********** HEADER **********/
  /* Anchor decoration is unwanted in nav. */
  header nav a {
    text-decoration: none;
  }

  :is(header, footer):not(main *) {
    row-gap: var(--gutter-sm);
    padding-block: var(--spacing-md);

    &:is(header) {
      border-block-end: 2px solid var(--color-border);
    }

    &:is(footer) {
      padding-block: var(--gutter-lg);
      padding-block-end: var(--gutter-lg);

      border-block-start: 2px solid var(--color-border);
      font-size: var(--fontsize-sm);
      text-align: center;
    }

    hgroup,
    header > *:not(:only-child) {
      margin: unset;
    }

    hgroup {
      display: grid;
      column-gap: var(--gutter);
      place-content: space-between;
      place-items: center;
    }
  }

  /********** ASIDE (usually sidebar) **********/
  aside:not(main aside) {
    padding-block: var(--gutter);
    border-block: 1px solid var(--color-border);
    font-size: var(--fontsize-sm);

    & h1,
    & h2,
    & h3,
    & h4,
    & h5,
    & h6 {
      font-size: var(--font-main);
      letter-spacing: none;
      text-transform: none;
    }
  }
}

@layer theming.layout.nav {
  /********** NAV **********/

  nav:not(header nav) {
    > ul,
    > ol,
    > menu {
      display: flex;
      grid-column: content;
      flex-direction: row;
      flex-wrap: wrap;
      place-content: flex-start space-between;
      gap: inherit;
    }
  }

  /* ADD BUTTON STYLES FOR ACCESSIBILITY
    https://www.a11y-collective.com/blog/accessible-mega-menu/
 */

  header nav {
    --nav-block-spacing: var(--spacing-xs);
    --color-text-block: var(--text-contrast);

    display: block;
    grid-column: content;
    align-items: flex-start;

    ul,
    ol,
    menu {
      display: flex;
      column-gap: var(--gutter-sm);
      row-gap: var(--spacing-xxs);
      align-items: center;
      padding-inline: 0;
      color: var(--color-text-block);
      font-size: var(--fontsize-md);
      list-style: none;
      text-align: center;

      li {
        position: relative;
        padding-inline: var(--spacing-sm);
        padding-block: var(--nav-block-spacing);
        border-radius: var(--border-radius);
        background-color: var(--primary-d1);

        transition: background-color 280ms ease-in-out;
      }

      li li {
        background-color: transparent;

        &:hover,
        &:focus-within {
          background-color: color-mix(in oklab, var(--color-base), transparent 70%);
          transition: background-color 280ms ease-in-out;
        }
      }

      a {
        color: inherit;
      }

      /* Stretched link */
      li > a::before {
        z-index: 1;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        content: "";
        cursor: pointer;
      }

      /* With submenu */
      &:has(menu, ul, ol) {
        flex-wrap: wrap;

        /* Arrow icon for top-level menu items */
        > li > a::after {
          display: inline-block;
          margin-inline-start: 0.25em;
          translate: 0 0.125em;
          border: 0.25em solid transparent;
          border-top-color: color-mix(in oklab, var(--color-text-block) 66%, transparent);
          content: "";
        }

        /* Extend box to submenu for mouseover */
        & > li > a::before {
          margin-block-end: calc(0px - var(--spacing-sm));
        }
      }

      /* Submenus / Mouseover nav menu
       * Note that for the nav menu to be properly accessible according to WCAG, some 
       * Javascript is required for keyboard functionality. @LINK
       */
      ul,
      ol,
      menu {
        z-index: 10;

        position: absolute;
        top: 100%;
        left: 50%;
        /* visibility: hidden; */
        /* content-visibility: hidden; */
        flex-direction: column;
        align-items: center;

        min-inline-size: max(100%, 15ch);
        margin-top: var(--nav-block-spacing);
        translate: -50% calc(0px - var(--spacing-xs));
        border-radius: var(--border-radius);
        background-color: var(--primary-l3);
        box-shadow: var(--shadow);

        color: initial;
        opacity: 0;

        pointer-events: none;

        transition: 120ms all 120ms ease-in-out allow-discrete;

        li {
          min-inline-size: 100%;
        }

        li:first-of-type & {
          left: 0;
          translate: 0 calc(0px - var(--spacing-xs));
        }

        li:last-of-type & {
          right: 0;
          left: auto;
          translate: 0 calc(0px - var(--spacing-xs));
        }
      }

      li:has(ul, ol, menu) {
        padding-inline: var(--spacing-md);
        padding-block: var(--nav-block-spacing);

        &:hover,
        &:focus-within {
          background-color: var(--color-primary);
          transition: background-color 280ms ease-in-out;

          ul,
          ol {
            transform: translateY(var(--spacing-xs));
            opacity: 1;
            pointer-events: initial;

            &::after {
              opacity: 1;
            }
          }
        }
      }
    }
  }
}

@layer theming.layout {
  :root,
  ::backdrop {
    --input-columns: [label-start] minmax(6ch, max-content) [label-end input-start] minmax(60%, 1fr) [input-end];
  }

  /* FORMS **********************/
  /* https://html.spec.whatwg.org/multipage/forms.html **/
  form {
    --border-width: 1px;
    --border-style: solid;
    --border-color: var(--color-gray);
    --color-fieldset-border: var(--color-border);
    --color-form-legend: var(--primary-d1);

    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    gap: var(--gutter);

    /* Change the placeholder text to be more accessible. */
    /* https://www.w3.org/WAI/tutorials/forms/instructions/ */
    ::placeholder {
      color: var(--color-gray);
      opacity: 1;
    }

    /* Remove the list styles for radio and checkbox inputs */
    :where(ul, ol):has([type="radio"], [type="checkbox"]) {
      padding-inline: unset;

      li:has(> label, > input):has([type="radio"], [type="checkbox"]) {
        list-style: none;
      }
    }
  }

  input {
    overflow-x: auto;

    *:has(> &) {
      min-inline-size: 0;
    }
  }

  fieldset {
    display: grid;
    grid-template-columns: var(--input-columns);
    column-gap: clamp(var(--gutter-sm), var(--gutter), var(--gutter)); /* Shrinks to small at low viewport width */
    row-gap: var(--gutter);

    padding-inline: var(--spacing-md);
    padding-block-start: var(--spacing-sm);
    padding-block-end: var(--spacing-md);
    border-radius: var(--border-radius);

    border-color: var(--color-fieldset-border);

    legend {
      color: var(--color-form-legend);
      font-weight: bold;
      font-family: var(--font-headings);
    }

    /* Align everything to the outer edges of the containing fieldset by default */
    * {
      grid-column: -1 / 1;
    }

    /* Remove gutter between label and inputs  */
    > label + input {
      margin-block-start: calc(0px - var(--gutter));
    }
  }

  /* 
    *  EXPLICIT INPUT LABELS
    *  When the <Input> element is placed sequential to the <Label> element, display
    *  them vertically stacked. This is the recommended layout for quick completion of 
    *  forms, although it does increase the vertical real estate required.  
    */
  & p:has(> label + :where(input, select, textarea), > input:only-child):not(label) {
    display: flex;
    flex-direction: column;
  }

  /* 
    *  IMPLICIT INPUT LABELS 
    *  When the <Input> element is nested within the <Label> element, display
    *  them horizontally with consistent label and input widths.  
    */
  label:has(> input:not([type="checkbox"], [type="radio"]), > select, > textarea, > progress) {
    display: inline-grid;
    grid-template-columns: var(--input-columns);
    place-items: center stretch;
    overflow-x: auto;
    gap: inherit;
    text-align: end;

    p {
      grid-column: label;
      max-inline-size: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    input {
      grid-column: input;
      max-inline-size: 100%;
    }
  }

  input:not(
      [type="submit"],
      [type="button"],
      [type="reset"],
      [type="checkbox"],
      [type="radio"],
      [type="file"],
      [type="color"]
    ),
  select,
  textarea {
    padding-inline: 1em;
    /* Padding is based on text size within inputs */
    padding-block: 0.5em;

    border-width: var(--border-width);
    border-style: var(--border-style);
    border-color: var(--border-color);
    vertical-align: top;

    &,
    *:has(> &) {
      min-inline-size: 20ch;
    }

    &:focus,
    &:focus-within {
      outline-color: var(--color-accent);
      outline-offset: var(--border-width);
    }
  }

  option:checked {
    background-color: var(--accent-l3);
    font-weight: 500;
  }

  textarea {
    resize: vertical;
  }

  [type="checkbox"],
  [type="radio"],
  [type="range"],
  progress {
    accent-color: var(--color-accent);
  }

  [type="radio"],
  [type="checkbox"] {
    position: relative;
    inline-size: fit-content;
    margin-inline-end: var(--gutter-sm);
    cursor: pointer;

    label:has(&),
    ~ label {
      cursor: pointer;
    }
  }

  [type="datetime-local"],
  [type="week"],
  [type="month"],
  [type="date"],
  [type="text"]:has(+ datalist),
  [type="color"],
  select {
    border-radius: var(--border-radius);
    box-shadow: inset 0px 1px 3px 1px var(--gray-l3);
  }

  [type="color"] {
    min-inline-size: 100%;
    min-block-size: 1rlh;

    padding-inline: var(--spacing-xs);
    padding-block: 3px;
  }

  [type="search"],
  [role="search"] {
    border-radius: 1.2em;
  }

  [type="file"] {
    inline-size: 100%;
    color: var(--text-muted);

    &::file-selector-button {
      margin-inline-end: var(--gutter);
    }
  }

  button,
  [role="button"],
  input[type="submit"],
  input[type="reset"],
  input[type="button"],
  label[type="button"] {
    inline-size: max-content;
    cursor: pointer;
  }
}

@layer theming.layout {
  main :is(article, section, nav, aside, hgroup, address) {
    padding-block: var(--spacing-md);
  }

  section {
    margin-inline: calc(0px - var(--spacing-md));
    padding-inline: var(--spacing-md);
  }

  section,
  article {
    display: flex;
    flex-direction: column;

    overflow-x: auto;
    gap: var(--spacing-md);
  }

  section:not(:has(article)),
  section article,
  form:has(fieldset) {
    padding: var(--spacing-md);

    border: 1px solid var(--color-border);
    box-shadow: var(--shadow);
  }

  article:has(article) {
    --calc: calc(var(--calc, 90%) - 10%);
    --article-background: color-mix(in oklab, var(--color-primary) var(--calc), transparent);
    article {
      --article-background: color-mix(in oklab, var(--color-primary) var(--calc), transparent);
      article {
        --article-background: color-mix(in oklab, var(--color-primary) var(--calc), transparent);
      }
    }
  }

  hr {
    display: block;
    width: 100%;
    height: 2px;
    border: none;
    background-color: var(--color-tertiary);
  }
}
